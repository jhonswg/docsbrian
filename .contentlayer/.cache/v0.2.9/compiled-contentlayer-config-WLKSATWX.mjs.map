{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts", "../../../utils/mdx.ts", "../../../config/site-config.ts"],
  "sourcesContent": ["import {\r\n  ComputedFields,\r\n  defineDocumentType,\r\n  makeSource,\r\n} from \"contentlayer/source-files\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport rehypeSlug from \"rehype-slug\";\r\nimport rehypePrism from \"rehype-prism-plus\";\r\nimport rehypeCodeTitles from \"rehype-code-titles\";\r\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\r\nimport { getTableOfContents } from \"./utils\";\r\nimport siteConfig from \"./config/site-config\";\r\n\r\nconst computedFields: ComputedFields = {\r\n  slug: {\r\n    type: \"string\",\r\n    resolve: (doc) => `/${doc._raw.flattenedPath}`,\r\n  },\r\n  editUrl: {\r\n    type: \"string\",\r\n    resolve: (doc) =>\r\n      siteConfig.repo?.editUrl ? `${siteConfig.repo.editUrl}/${doc._id}` : null,\r\n  },\r\n};\r\n\r\nexport const Doc = defineDocumentType(() => ({\r\n  name: \"Doc\",\r\n  filePathPattern: `docs/*.mdx`,\r\n  contentType: \"mdx\",\r\n  fields: {\r\n    title: {\r\n      type: \"string\",\r\n      description: \"The title of the document\",\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: \"string\",\r\n      description: \"The description of the document\",\r\n      required: true,\r\n    },\r\n  },\r\n  computedFields: {\r\n    ...computedFields,\r\n    headings: {\r\n      type: \"json\",\r\n      resolve: (doc) => getTableOfContents(doc.body.raw),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default makeSource({\r\n  contentDirPath: \"content\",\r\n  documentTypes: [Doc],\r\n  mdx: {\r\n    remarkPlugins: [remarkGfm],\r\n    rehypePlugins: [\r\n      rehypeSlug,\r\n      rehypeCodeTitles,\r\n      rehypePrism,\r\n      [\r\n        rehypeAutolinkHeadings,\r\n        {\r\n          behavior: \"append\",\r\n          properties: {\r\n            className: [\"anchor\"],\r\n          },\r\n        },\r\n      ],\r\n    ],\r\n  },\r\n});\r\n", "import slugger from \"github-slugger\";\r\nimport { Heading } from \"@/types\";\r\n\r\nexport const getTableOfContents = (mdxContent: string) => {\r\n  const regexp = new RegExp(/^(### |## )(.*)\\n/, \"gm\");\r\n  const headings = [...mdxContent.matchAll(regexp)];\r\n  let tableOfContents: Heading[] = [];\r\n\r\n  if (headings.length) {\r\n    tableOfContents = headings.map((heading) => {\r\n      const headingText = heading[2].trim();\r\n      const headingType = heading[1].trim() === \"##\" ? \"h2\" : \"h3\";\r\n      const headingLink = slugger.slug(headingText, false);\r\n\r\n      return {\r\n        text: headingText,\r\n        id: headingLink,\r\n        level: headingType,\r\n      };\r\n    });\r\n  }\r\n\r\n  return tableOfContents;\r\n};\r\n", "import { SiteConfig } from \"@/types\";\r\n\r\nexport const websiteUrl = process.env.NEXT_PUBLIC_VERCEL_URL;\r\nexport const githubBaseUrl =\r\n  \"https://github.com/bryanbarrios/lil-docs-template\";\r\n\r\nconst siteConfig: SiteConfig = {\r\n  repo: {\r\n    url: githubBaseUrl,\r\n    editUrl: `${githubBaseUrl}/edit/main/content`,\r\n    blobUrl: `${githubBaseUrl}/blob/main`,\r\n  },\r\n  author: {\r\n    name: \"Bryan Barrios\",\r\n    github: \"bryanbarrios\",\r\n    twitter: \"@bryanbarrios__\",\r\n    email: \"bryansbarrios@outlook.com\",\r\n  },\r\n  seo: {\r\n    title: \"Jhonswg - Stake and Earn with us\",\r\n    description: \"Node Validator\",\r\n    openGraph: {\r\n      url: websiteUrl,\r\n      type: \"website\",\r\n      image: {\r\n        url: `${websiteUrl}/`,\r\n        width: 1240,\r\n        height: 480,\r\n        alt: \"Lil Documentation Template: A lil docs template for lil projects.\",\r\n        type: \"image/png\",\r\n      },\r\n      locale: \"en_US\",\r\n      siteName: \"Lil Docs Template\",\r\n    },\r\n    twitter: {\r\n      site: \"@bryanbarrios__\",\r\n      handle: \"@bryanbarrios__\",\r\n      cardType: \"summary_large_image\",\r\n      image: {\r\n        url: `${websiteUrl}/static/images/banner.png`,\r\n        width: 1012,\r\n        height: 506,\r\n        alt: \"Lil Documentation Template: A lil docs template for lil projects.\",\r\n        type: \"image/png\",\r\n      },\r\n    },\r\n    robots: \"index, follow\",\r\n  },\r\n};\r\n\r\nexport default siteConfig;\r\n"],
  "mappings": "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",
  "names": []
}
